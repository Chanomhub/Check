{"version":3,"file":"json-translator.esm.js","sources":["../src/utils/micro.ts","../src/modules/languages.ts","../src/utils/console.ts","../src/modules/functions.ts","../src/modules/modules.ts","../src/modules/helpers.ts","../src/utils/yaml.ts","../src/core/core.ts","../src/core/ignorer.ts","../src/core/translator.ts","../src/core/json_object.ts","../src/core/json_file.ts","../src/core/proxy_file.ts","../src/cli/prompt.ts","../src/cli/cli.ts","../src/index.ts"],"sourcesContent":["import * as packageJSON from '../../package.json';\n\nexport function translationStatistic(\n  totalTranslated: number,\n  totalTranslation: number\n): string {\n  return `${totalTranslated} of ${totalTranslation} translated.`;\n}\nexport function capitalize(str: string): string {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\nexport const current_version = packageJSON.version;\nexport const default_value = '--';\nexport const translation_value_limit = 5000;\nexport const default_concurrency_limit = 3;\nexport const fallbacks = {\n  yes: true,\n  no: false,\n};\nexport const default_fallback = fallbacks.no;\n","export const GoogleTranslateLanguages: Record<string, string> = {\n  Automatic: 'auto',\n  Afrikaans: 'af',\n  Albanian: 'sq',\n  Amharic: 'am',\n  Arabic: 'ar',\n  Armenian: 'hy',\n  Azerbaijani: 'az',\n  Basque: 'eu',\n  Belarusian: 'be',\n  Bengali: 'bn',\n  Bosnian: 'bs',\n  Bulgarian: 'bg',\n  Catalan: 'ca',\n  Cebuano: 'ceb',\n  Chichewa: 'ny',\n  Chinese_Simplified: 'zh-CN',\n  Chinese_Traditional: 'zh-TW',\n  Corsican: 'co',\n  Croatian: 'hr',\n  Czech: 'cs',\n  Danish: 'da',\n  Dutch: 'nl',\n  English: 'en',\n  Esperanto: 'eo',\n  Estonian: 'et',\n  Filipino: 'tl',\n  Finnish: 'fi',\n  French: 'fr',\n  Frisian: 'fy',\n  Galician: 'gl',\n  Georgian: 'ka',\n  German: 'de',\n  Greek: 'el',\n  Gujarati: 'gu',\n  Haitian_Creole: 'ht',\n  Hausa: 'ha',\n  Hawaiian: 'haw',\n  Hebrew: 'iw',\n  Hindi: 'hi',\n  Hmong: 'hmn',\n  Hungarian: 'hu',\n  Icelandic: 'is',\n  Igbo: 'ig',\n  Indonesian: 'id',\n  Irish: 'ga',\n  Italian: 'it',\n  Japanese: 'ja',\n  Javanese: 'jw',\n  Kannada: 'kn',\n  Kazakh: 'kk',\n  Khmer: 'km',\n  Korean: 'ko',\n  Kurdish_Kurmanji: 'ku',\n  Kyrgyz: 'ky',\n  Lao: 'lo',\n  Latin: 'la',\n  Latvian: 'lv',\n  Lithuanian: 'lt',\n  Luxembourgish: 'lb',\n  Macedonian: 'mk',\n  Malagasy: 'mg',\n  Malay: 'ms',\n  Malayalam: 'ml',\n  Maltese: 'mt',\n  Maori: 'mi',\n  Marathi: 'mr',\n  Mongolian: 'mn',\n  Myanmar_Burmese: 'my',\n  Nepali: 'ne',\n  Norwegian: 'no',\n  Pashto: 'ps',\n  Persian: 'fa',\n  Polish: 'pl',\n  Portuguese: 'pt',\n  Punjabi: 'pa',\n  Romanian: 'ro',\n  Russian: 'ru',\n  Samoan: 'sm',\n  Scots_Gaelic: 'gd',\n  Serbian: 'sr',\n  Sesotho: 'st',\n  Shona: 'sn',\n  Sindhi: 'sd',\n  Sinhala: 'si',\n  Slovak: 'sk',\n  Slovenian: 'sl',\n  Somali: 'so',\n  Spanish: 'es',\n  Sundanese: 'su',\n  Swahili: 'sw',\n  Swedish: 'sv',\n  Tajik: 'tg',\n  Tamil: 'ta',\n  Telugu: 'te',\n  Thai: 'th',\n  Turkish: 'tr',\n  Ukrainian: 'uk',\n  Urdu: 'ur',\n  Uzbek: 'uz',\n  Vietnamese: 'vi',\n  Welsh: 'cy',\n  Xhosa: 'xh',\n  Yiddish: 'yi',\n  Yoruba: 'yo',\n  Zulu: 'zu',\n};\n\nexport const GoogleTranslate2Languages: Record<string, string> = {\n  Automatic: 'auto',\n  Afrikaans: 'af',\n  Albanian: 'sq',\n  Amharic: 'am',\n  Arabic: 'ar',\n  Armenian: 'hy',\n  Azerbaijani: 'az',\n  Basque: 'eu',\n  Belarusian: 'be',\n  Bengali: 'bn',\n  Bosnian: 'bs',\n  Bulgarian: 'bg',\n  Catalan: 'ca',\n  Cebuano: 'ceb',\n  Chichewa: 'ny',\n  Chinese_Simplified: 'zh-CN',\n  Chinese_Traditional: 'zh-TW',\n  Corsican: 'co',\n  Croatian: 'hr',\n  Czech: 'cs',\n  Danish: 'da',\n  Dutch: 'nl',\n  English: 'en',\n  Esperanto: 'eo',\n  Estonian: 'et',\n  Filipino: 'tl',\n  Finnish: 'fi',\n  French: 'fr',\n  Frisian: 'fy',\n  Galician: 'gl',\n  Georgian: 'ka',\n  German: 'de',\n  Greek: 'el',\n  Gujarati: 'gu',\n  Haitian_Creole: 'ht',\n  Hausa: 'ha',\n  Hawaiian: 'haw',\n  Hebrew: 'iw',\n  Hindi: 'hi',\n  Hmong: 'hmn',\n  Hungarian: 'hu',\n  Icelandic: 'is',\n  Igbo: 'ig',\n  Indonesian: 'id',\n  Irish: 'ga',\n  Italian: 'it',\n  Japanese: 'ja',\n  Javanese: 'jw',\n  Kannada: 'kn',\n  Kazakh: 'kk',\n  Khmer: 'km',\n  Korean: 'ko',\n  Kurdish_Kurmanji: 'ku',\n  Kyrgyz: 'ky',\n  Lao: 'lo',\n  Latin: 'la',\n  Latvian: 'lv',\n  Lithuanian: 'lt',\n  Luxembourgish: 'lb',\n  Macedonian: 'mk',\n  Malagasy: 'mg',\n  Malay: 'ms',\n  Malayalam: 'ml',\n  Maltese: 'mt',\n  Maori: 'mi',\n  Marathi: 'mr',\n  Mongolian: 'mn',\n  Myanmar_Burmese: 'my',\n  Nepali: 'ne',\n  Norwegian: 'no',\n  Pashto: 'ps',\n  Persian: 'fa',\n  Polish: 'pl',\n  Portuguese: 'pt',\n  Punjabi: 'pa',\n  Romanian: 'ro',\n  Russian: 'ru',\n  Samoan: 'sm',\n  Scots_Gaelic: 'gd',\n  Serbian: 'sr',\n  Sesotho: 'st',\n  Shona: 'sn',\n  Sindhi: 'sd',\n  Sinhala: 'si',\n  Slovak: 'sk',\n  Slovenian: 'sl',\n  Somali: 'so',\n  Spanish: 'es',\n  Sundanese: 'su',\n  Swahili: 'sw',\n  Swedish: 'sv',\n  Tajik: 'tg',\n  Tamil: 'ta',\n  Telugu: 'te',\n  Thai: 'th',\n  Turkish: 'tr',\n  Ukrainian: 'uk',\n  Urdu: 'ur',\n  Uzbek: 'uz',\n  Vietnamese: 'vi',\n  Welsh: 'cy',\n  Xhosa: 'xh',\n  Yiddish: 'yi',\n  Yoruba: 'yo',\n  Zulu: 'zu',\n};\n\nexport const LibreTranslateLanguages: Record<string, string> = {\n  Automatic: 'auto',\n  English: 'en',\n  Arabic: 'ar',\n  Azerbaijani: 'az',\n  Chinese: 'zh',\n  Czech: 'cs',\n  Danish: 'da',\n  Dutch: 'nl',\n  Esperanto: 'eo',\n  Finnish: 'fi',\n  French: 'fr',\n  German: 'de',\n  Greek: 'el',\n  Hebrew: 'iw',\n  Hindi: 'hi',\n  Hungarian: 'hu',\n  Indonesian: 'id',\n  Irish: 'ga',\n  Italian: 'it',\n  Japanese: 'ja',\n  Korean: 'ko',\n  Persian: 'fa',\n  Polish: 'pl',\n  Portuguese: 'pt',\n  Russian: 'ru',\n  Slovak: 'sk',\n  Spanish: 'es',\n  Swedish: 'sv',\n  Turkish: 'tr',\n  Ukrainian: 'uk',\n};\n\nexport const ArgosTranslateLanguages: Record<string, string> = {\n  Automatic: 'auto',\n  English: 'en',\n  Arabic: 'ar',\n  Chinese: 'zh',\n  French: 'fr',\n  German: 'de',\n  Hindi: 'hi',\n  Indonesian: 'id',\n  Irish: 'ga',\n  Italian: 'it',\n  Japanese: 'ja',\n  Korean: 'ko',\n  Polish: 'pl',\n  Portuguese: 'pt',\n  Russian: 'ru',\n  Spanish: 'es',\n  Turkish: 'tr',\n  Vietnamese: 'vi',\n};\n\nexport const BingTranslateLanguages: Record<string, string> = {\n  Automatic: 'auto-detect',\n  Afrikaans: 'af',\n  Albanian: 'sq',\n  Amharic: 'am',\n  Arabic: 'ar',\n  Armenian: 'hy',\n  Assamese: 'as',\n  Azerbaijani: 'az',\n  Bangla: 'bn',\n  Bashkir: 'ba',\n  Basque: 'eu',\n  Bosnian: 'bs',\n  Bulgarian: 'bg',\n  Cantonese_Traditional: 'yue',\n  Catalan: 'ca',\n  Chinese_Literary: 'lzh',\n  Chinese_Simplified: 'zh-Hans',\n  Chinese_Traditional: 'zh-Hant',\n  Croatian: 'hr',\n  Czech: 'cs',\n  Danish: 'da',\n  Dari: 'prs',\n  Divehi: 'dv',\n  Dutch: 'nl',\n  English: 'en',\n  Estonian: 'et',\n  Faroese: 'fo',\n  Fijian: 'fj',\n  Filipino: 'fil',\n  Finnish: 'fi',\n  French: 'fr',\n  French_Canada: 'fr-CA',\n  Galician: 'gl',\n  Georgian: 'ka',\n  German: 'de',\n  Greek: 'el',\n  Gujarati: 'gu',\n  Haitian_Creole: 'ht',\n  Hebrew: 'he',\n  Hindi: 'hi',\n  Hmong_Daw: 'mww',\n  Hungarian: 'hu',\n  Icelandic: 'is',\n  Indonesian: 'id',\n  Inuinnaqtun: 'ikt',\n  Inuktitut: 'iu',\n  Inuktitut_Latin: 'iu-Latn',\n  Irish: 'ga',\n  Italian: 'it',\n  Japanese: 'ja',\n  Kannada: 'kn',\n  Kazakh: 'kk',\n  Khmer: 'km',\n  Klingon_Latin: 'tlh-Latn',\n  Korean: 'ko',\n  Kurdish_Central: 'ku',\n  Kurdish_Northern: 'kmr',\n  Kyrgyz: 'ky',\n  Lao: 'lo',\n  Latvian: 'lv',\n  Lithuanian: 'lt',\n  Macedonian: 'mk',\n  Malagasy: 'mg',\n  Malay: 'ms',\n  Malayalam: 'ml',\n  Maltese: 'mt',\n  Marathi: 'mr',\n  Mongolian_Cyrillic: 'mn-Cyrl',\n  Mongolian_Traditional: 'mn-Mong',\n  Myanmar_Burmese: 'my',\n  Māori: 'mi',\n  Nepali: 'ne',\n  Norwegian: 'nb',\n  Odia: 'or',\n  Pashto: 'ps',\n  Persian: 'fa',\n  Polish: 'pl',\n  Portuguese_Brazil: 'pt',\n  Portuguese_Portugal: 'pt-PT',\n  Punjabi: 'pa',\n  Querétaro_Otomi: 'otq',\n  Romanian: 'ro',\n  Russian: 'ru',\n  Samoan: 'sm',\n  Serbian_Cyrillic: 'sr-Cyrl',\n  Serbian_Latin: 'sr-Latn',\n  Slovak: 'sk',\n  Slovenian: 'sl',\n  Somali: 'so',\n  Spanish: 'es',\n  Swahili: 'sw',\n  Swedish: 'sv',\n  Tahitian: 'ty',\n  Tamil: 'ta',\n  Tatar: 'tt',\n  Telugu: 'te',\n  Thai: 'th',\n  Tibetan: 'bo',\n  Tigrinya: 'ti',\n  Tongan: 'to',\n  Turkish: 'tr',\n  Turkmen: 'tk',\n  Ukrainian: 'uk',\n  Upper_Sorbian: 'hsb',\n  Urdu: 'ur',\n  Uyghur: 'ug',\n  Uzbek_Latin: 'uz',\n  Vietnamese: 'vi',\n  Welsh: 'cy',\n  Yucatec_Maya: 'yua',\n  Zulu: 'zu',\n};\n\nexport const DeepLTranslateLanguages: Record<string, string> = {\n  Bulgarian: 'BG',\n  Chinese: 'ZH',\n  Czech: 'CS',\n  Danish: 'DA',\n  Dutch: 'NL',\n  English: 'EN',\n  Estonian: 'ET',\n  Finnish: 'FI',\n  French: 'FR',\n  German: 'DE',\n  Greek: 'EL',\n  Hungarian: 'HU',\n  Indonesian: 'ID',\n  Italian: 'IT',\n  Japanese: 'JA',\n  Korean: 'KO',\n  Latvian: 'LV',\n  Lithuanian: 'LT',\n  Norwegian: 'NB',\n  Polish: 'PL',\n  Portuguese: 'PT',\n  Romanian: 'RO',\n  Russian: 'RU',\n  Slovak: 'SK',\n  Slovenian: 'SL',\n  Spanish: 'ES',\n  Swedish: 'SV',\n  Turkish: 'TR',\n  Ukrainian: 'UK',\n};\n\nexport const LanguageMapping: Record<string, Record<string, string>> = {\n  Automatic: {\n    google: GoogleTranslateLanguages.Automatic,\n    google2: GoogleTranslate2Languages.Automatic,\n    libre: LibreTranslateLanguages.Automatic,\n    argos: ArgosTranslateLanguages.Automatic,\n    bing: BingTranslateLanguages.Automatic,\n  },\n  Afrikaans: {\n    google: GoogleTranslateLanguages.Afrikaans,\n    google2: GoogleTranslateLanguages.Afrikaans,\n    bing: BingTranslateLanguages.Afrikaans,\n  },\n  Albanian: {\n    google: GoogleTranslateLanguages.Albanian,\n    google2: GoogleTranslate2Languages.Albanian,\n    bing: BingTranslateLanguages.Albanian,\n  },\n  Amharic: {\n    google: GoogleTranslateLanguages.Amharic,\n    google2: GoogleTranslate2Languages.Amharic,\n    bing: BingTranslateLanguages.Amharic,\n  },\n  Arabic: {\n    google: GoogleTranslateLanguages.Arabic,\n    google2: GoogleTranslate2Languages.Arabic,\n    libre: LibreTranslateLanguages.Arabic,\n    argos: ArgosTranslateLanguages.Arabic,\n    bing: BingTranslateLanguages.Arabic,\n  },\n  Assamese: {\n    bing: BingTranslateLanguages.Assamese,\n  },\n  Armenian: {\n    google: GoogleTranslateLanguages.Armenian,\n    google2: GoogleTranslate2Languages.Armenian,\n    bing: BingTranslateLanguages.Armenian,\n  },\n  Azerbaijani: {\n    google: GoogleTranslateLanguages.Azerbaijani,\n    google2: GoogleTranslate2Languages.Azerbaijani,\n    libre: LibreTranslateLanguages.Azerbaijani,\n    bing: BingTranslateLanguages.Azerbaijani,\n  },\n  Bashkir: {\n    bing: BingTranslateLanguages.Bashkir,\n  },\n  Basque: {\n    google: GoogleTranslateLanguages.Basque,\n    google2: GoogleTranslate2Languages.Basque,\n    bing: BingTranslateLanguages.Basque,\n  },\n  Belarusian: {\n    google: GoogleTranslateLanguages.Belarusian,\n    google2: GoogleTranslate2Languages.Belarusian,\n  },\n  Bengali: {\n    google: GoogleTranslateLanguages.Bengali,\n    google2: GoogleTranslate2Languages.Bengali,\n    bing: BingTranslateLanguages.Bangla,\n  },\n  Bosnian: {\n    google: GoogleTranslateLanguages.Bosnian,\n    google2: GoogleTranslate2Languages.Bosnian,\n    bing: BingTranslateLanguages.Bosnian,\n  },\n  Bulgarian: {\n    google: GoogleTranslateLanguages.Bulgarian,\n    google2: GoogleTranslate2Languages.Bulgarian,\n    bing: BingTranslateLanguages.Bulgarian,\n    deepl: DeepLTranslateLanguages.Bulgarian,\n  },\n  Cantonese_Traditional: {\n    bing: BingTranslateLanguages.Cantonese_Traditional,\n  },\n  Catalan: {\n    google: GoogleTranslateLanguages.Catalan,\n    google2: GoogleTranslate2Languages.Catalan,\n    bing: BingTranslateLanguages.Catalan,\n  },\n  Cebuano: {\n    google: GoogleTranslateLanguages.Cebuano,\n    google2: GoogleTranslate2Languages.Cebuano,\n  },\n  Chichewa: {\n    google: GoogleTranslateLanguages.Chichewa,\n    google2: GoogleTranslate2Languages.Chichewa,\n  },\n  Chinese_Literary: {\n    bing: BingTranslateLanguages.Chinese_Literary,\n  },\n  Chinese_Simplified: {\n    google: GoogleTranslateLanguages.Chinese_Simplified,\n    google2: GoogleTranslate2Languages.Chinese_Simplified,\n    bing: BingTranslateLanguages.Chinese_Simplified,\n    libre: LibreTranslateLanguages.Chinese,\n    argos: ArgosTranslateLanguages.Chinese,\n    deepl: DeepLTranslateLanguages.Chinese,\n  },\n  Chinese_Traditional: {\n    google: GoogleTranslateLanguages.Chinese_Traditional,\n    google2: GoogleTranslate2Languages.Chinese_Traditional,\n    bing: BingTranslateLanguages.Chinese_Traditional,\n  },\n  Corsican: {\n    google: GoogleTranslateLanguages.Corsican,\n    google2: GoogleTranslate2Languages.Corsican,\n  },\n  Croatian: {\n    google: GoogleTranslateLanguages.Croatian,\n    google2: GoogleTranslate2Languages.Croatian,\n    bing: BingTranslateLanguages.Croatian,\n  },\n  Czech: {\n    google: GoogleTranslateLanguages.Czech,\n    google2: GoogleTranslate2Languages.Czech,\n    bing: BingTranslateLanguages.Czech,\n    libre: LibreTranslateLanguages.Czech,\n    deepl: DeepLTranslateLanguages.Czech,\n  },\n  Danish: {\n    google: GoogleTranslateLanguages.Danish,\n    google2: GoogleTranslate2Languages.Danish,\n    bing: BingTranslateLanguages.Danish,\n    libre: LibreTranslateLanguages.Danish,\n    deepl: DeepLTranslateLanguages.Danish,\n  },\n  Dari: {\n    bing: BingTranslateLanguages.Dari,\n  },\n  Divehi: {\n    bing: BingTranslateLanguages.Divehi,\n  },\n  Dutch: {\n    google: GoogleTranslateLanguages.Dutch,\n    google2: GoogleTranslate2Languages.Dutch,\n    bing: BingTranslateLanguages.Dutch,\n    libre: LibreTranslateLanguages.Dutch,\n    deepl: DeepLTranslateLanguages.Dutch,\n  },\n  English: {\n    google: GoogleTranslateLanguages.English,\n    google2: GoogleTranslate2Languages.English,\n    bing: BingTranslateLanguages.English,\n    libre: LibreTranslateLanguages.English,\n    argos: ArgosTranslateLanguages.English,\n    deepl: DeepLTranslateLanguages.English,\n  },\n  Esperanto: {\n    google: GoogleTranslateLanguages.Esperanto,\n    google2: GoogleTranslate2Languages.Esperanto,\n    libre: LibreTranslateLanguages.Esperanto,\n  },\n  Estonian: {\n    google: GoogleTranslateLanguages.Estonian,\n    google2: GoogleTranslate2Languages.Estonian,\n    bing: BingTranslateLanguages.Estonian,\n    deepl: DeepLTranslateLanguages.Estonian,\n  },\n  Faroese: {\n    bing: BingTranslateLanguages.Faroese,\n  },\n  Fijian: {\n    bing: BingTranslateLanguages.Fijian,\n  },\n  Filipino: {\n    google: GoogleTranslateLanguages.Filipino,\n    google2: GoogleTranslate2Languages.Filipino,\n    bing: BingTranslateLanguages.Filipino,\n  },\n  Finnish: {\n    google: GoogleTranslateLanguages.Finnish,\n    google2: GoogleTranslate2Languages.Finnish,\n    bing: BingTranslateLanguages.Finnish,\n    libre: LibreTranslateLanguages.Finnish,\n    deepl: DeepLTranslateLanguages.Finnish,\n  },\n  French: {\n    google: GoogleTranslateLanguages.French,\n    google2: GoogleTranslate2Languages.French,\n    bing: BingTranslateLanguages.French,\n    libre: LibreTranslateLanguages.French,\n    argos: ArgosTranslateLanguages.French,\n    deepl: DeepLTranslateLanguages.French,\n  },\n  French_Canada: {\n    bing: BingTranslateLanguages.French_Canada,\n  },\n  Frisian: {\n    google: GoogleTranslateLanguages.Frisian,\n    google2: GoogleTranslate2Languages.Frisian,\n  },\n  Galician: {\n    google: GoogleTranslateLanguages.Galician,\n    google2: GoogleTranslate2Languages.Galician,\n    bing: BingTranslateLanguages.Galician,\n  },\n  Georgian: {\n    google: GoogleTranslateLanguages.Georgian,\n    google2: GoogleTranslate2Languages.Georgian,\n    bing: BingTranslateLanguages.Georgian,\n  },\n  German: {\n    google: GoogleTranslateLanguages.German,\n    google2: GoogleTranslate2Languages.German,\n    bing: BingTranslateLanguages.German,\n    libre: LibreTranslateLanguages.German,\n    argos: ArgosTranslateLanguages.German,\n    deepl: DeepLTranslateLanguages.German,\n  },\n  Greek: {\n    google: GoogleTranslateLanguages.Greek,\n    google2: GoogleTranslate2Languages.Greek,\n    bing: BingTranslateLanguages.Greek,\n    libre: LibreTranslateLanguages.Greek,\n    deepl: DeepLTranslateLanguages.Greek,\n  },\n  Gujarati: {\n    google: GoogleTranslateLanguages.Gujarati,\n    google2: GoogleTranslate2Languages.Gujarati,\n    bing: BingTranslateLanguages.Gujarati,\n  },\n  Haitian_Creole: {\n    google: GoogleTranslateLanguages.Haitian_Creole,\n    google2: GoogleTranslate2Languages.Haitian_Creole,\n    bing: BingTranslateLanguages.Haitian_Creole,\n  },\n  Hausa: {\n    google: GoogleTranslateLanguages.Hausa,\n    google2: GoogleTranslate2Languages.Hausa,\n  },\n  Hawaiian: {\n    google: GoogleTranslateLanguages.Hawaiian,\n    google2: GoogleTranslate2Languages.Hawaiian,\n  },\n  Hebrew: {\n    google: GoogleTranslateLanguages.Hebrew,\n    google2: GoogleTranslate2Languages.Hebrew,\n    bing: BingTranslateLanguages.Hebrew,\n    libre: LibreTranslateLanguages.Hebrew,\n  },\n  Hindi: {\n    google: GoogleTranslateLanguages.Hindi,\n    google2: GoogleTranslate2Languages.Hindi,\n    bing: BingTranslateLanguages.Hindi,\n    libre: LibreTranslateLanguages.Hindi,\n    argos: ArgosTranslateLanguages.Hindi,\n  },\n  Hmong: {\n    google: GoogleTranslateLanguages.Hmong,\n    google2: GoogleTranslate2Languages.Hmong,\n    bing: BingTranslateLanguages.Hmong_Daw,\n  },\n  Hungarian: {\n    google: GoogleTranslateLanguages.Hungarian,\n    google2: GoogleTranslate2Languages.Hungarian,\n    bing: BingTranslateLanguages.Hungarian,\n    libre: LibreTranslateLanguages.Hungarian,\n    deepl: DeepLTranslateLanguages.Hungarian,\n  },\n  Icelandic: {\n    google: GoogleTranslateLanguages.Icelandic,\n    google2: GoogleTranslate2Languages.Icelandic,\n    bing: BingTranslateLanguages.Icelandic,\n  },\n  Igbo: {\n    google: GoogleTranslateLanguages.Igbo,\n    google2: GoogleTranslate2Languages.Igbo,\n  },\n  Indonesian: {\n    google: GoogleTranslateLanguages.Indonesian,\n    google2: GoogleTranslate2Languages.Indonesian,\n    bing: BingTranslateLanguages.Indonesian,\n    libre: LibreTranslateLanguages.Indonesian,\n    argos: ArgosTranslateLanguages.Indonesian,\n    deepl: DeepLTranslateLanguages.Indonesian,\n  },\n  Inuinnaqtun: {\n    bing: BingTranslateLanguages.Inuinnaqtun,\n  },\n  Inuktitut: {\n    bing: BingTranslateLanguages.Inuktitut,\n  },\n  Inuktitut_Latin: {\n    bing: BingTranslateLanguages.Inuktitut_Latin,\n  },\n  Irish: {\n    google: GoogleTranslateLanguages.Irish,\n    google2: GoogleTranslate2Languages.Irish,\n    bing: BingTranslateLanguages.Irish,\n    libre: LibreTranslateLanguages.Irish,\n    argos: ArgosTranslateLanguages.Irish,\n  },\n  Italian: {\n    google: GoogleTranslateLanguages.Italian,\n    google2: GoogleTranslate2Languages.Italian,\n    bing: BingTranslateLanguages.Italian,\n    libre: LibreTranslateLanguages.Italian,\n    argos: ArgosTranslateLanguages.Italian,\n    deepl: DeepLTranslateLanguages.Italian,\n  },\n  Japanese: {\n    google: GoogleTranslateLanguages.Japanese,\n    google2: GoogleTranslate2Languages.Japanese,\n    bing: BingTranslateLanguages.Japanese,\n    libre: LibreTranslateLanguages.Japanese,\n    argos: ArgosTranslateLanguages.Japanese,\n    deepl: DeepLTranslateLanguages.Japanese,\n  },\n  Javanese: {\n    google: GoogleTranslateLanguages.Javanese,\n    google2: GoogleTranslate2Languages.Javanese,\n  },\n  Kannada: {\n    google: GoogleTranslateLanguages.Kannada,\n    google2: GoogleTranslate2Languages.Kannada,\n    bing: BingTranslateLanguages.Kannada,\n  },\n  Kazakh: {\n    google: GoogleTranslateLanguages.Kazakh,\n    google2: GoogleTranslate2Languages.Kazakh,\n    bing: BingTranslateLanguages.Kazakh,\n  },\n  Khmer: {\n    google: GoogleTranslateLanguages.Khmer,\n    google2: GoogleTranslate2Languages.Khmer,\n    bing: BingTranslateLanguages.Khmer,\n  },\n  Klingon_Latin: {\n    bing: BingTranslateLanguages.Klingon_Latin,\n  },\n  Korean: {\n    google: GoogleTranslateLanguages.Korean,\n    google2: GoogleTranslate2Languages.Korean,\n    bing: BingTranslateLanguages.Korean,\n    libre: LibreTranslateLanguages.Korean,\n    argos: ArgosTranslateLanguages.Korean,\n    deepl: DeepLTranslateLanguages.Korean,\n  },\n  Kurdish_Kurmanji: {\n    google: GoogleTranslateLanguages.Kurdish_Kurmanji,\n    google2: GoogleTranslate2Languages.Kurdish_Kurmanji,\n    bing: BingTranslateLanguages.Kurdish_Kurmanji,\n  },\n  Kurdish_Northern: {\n    bing: BingTranslateLanguages.Kurdish_Northern,\n  },\n  Kyrgyz: {\n    google: GoogleTranslateLanguages.Kyrgyz,\n    google2: GoogleTranslate2Languages.Kyrgyz,\n    bing: BingTranslateLanguages.Kyrgyz,\n  },\n  Lao: {\n    google: GoogleTranslateLanguages.Lao,\n    google2: GoogleTranslate2Languages.Lao,\n    bing: BingTranslateLanguages.Lao,\n  },\n  Latin: {\n    google: GoogleTranslateLanguages.Latin,\n    google2: GoogleTranslate2Languages.Latin,\n  },\n  Latvian: {\n    google: GoogleTranslateLanguages.Latvian,\n    google2: GoogleTranslate2Languages.Latvian,\n    bing: BingTranslateLanguages.Latvian,\n    deepl: DeepLTranslateLanguages.Latvian,\n  },\n  Lithuanian: {\n    google: GoogleTranslateLanguages.Lithuanian,\n    google2: GoogleTranslate2Languages.Lithuanian,\n    bing: BingTranslateLanguages.Lithuanian,\n    deepl: DeepLTranslateLanguages.Lithuanian,\n  },\n  Luxembourgish: {\n    google: GoogleTranslateLanguages.Luxembourgish,\n    google2: GoogleTranslate2Languages.Luxembourgish,\n  },\n  Macedonian: {\n    google: GoogleTranslateLanguages.Macedonian,\n    google2: GoogleTranslate2Languages.Macedonian,\n    bing: BingTranslateLanguages.Macedonian,\n  },\n  Malagasy: {\n    google: GoogleTranslateLanguages.Malagasy,\n    google2: GoogleTranslate2Languages.Malagasy,\n    bing: BingTranslateLanguages.Malagasy,\n  },\n  Malay: {\n    google: GoogleTranslateLanguages.Malay,\n    google2: GoogleTranslate2Languages.Malay,\n    bing: BingTranslateLanguages.Malay,\n  },\n  Malayalam: {\n    google: GoogleTranslateLanguages.Malayalam,\n    google2: GoogleTranslate2Languages.Malayalam,\n    bing: BingTranslateLanguages.Malayalam,\n  },\n  Maltese: {\n    google: GoogleTranslateLanguages.Maltese,\n    google2: GoogleTranslate2Languages.Maltese,\n    bing: BingTranslateLanguages.Maltese,\n  },\n  Maori: {\n    google: GoogleTranslateLanguages.Maori,\n    google2: GoogleTranslate2Languages.Maori,\n    bing: BingTranslateLanguages.Māori,\n  },\n  Marathi: {\n    google: GoogleTranslateLanguages.Marathi,\n    google2: GoogleTranslate2Languages.Marathi,\n    bing: BingTranslateLanguages.Marathi,\n  },\n  Mongolian: {\n    google: GoogleTranslateLanguages.Marathi,\n    google2: GoogleTranslate2Languages.Marathi,\n    bing: BingTranslateLanguages.Mongolian_Traditional,\n  },\n  Mongolian_Cyrillic: {\n    bing: BingTranslateLanguages.Mongolian_Cyrillic,\n  },\n  Myanmar_Burmese: {\n    google: GoogleTranslateLanguages.Myanmar_Burmese,\n    google2: GoogleTranslate2Languages.Myanmar_Burmese,\n    bing: BingTranslateLanguages.Myanmar_Burmese,\n  },\n  Nepali: {\n    google: GoogleTranslateLanguages.Nepali,\n    google2: GoogleTranslate2Languages.Nepali,\n    bing: BingTranslateLanguages.Nepali,\n  },\n  Norwegian: {\n    google: GoogleTranslateLanguages.Norwegian,\n    google2: GoogleTranslate2Languages.Norwegian,\n    bing: BingTranslateLanguages.Norwegian,\n    deepl: DeepLTranslateLanguages.Norwegian,\n  },\n  Odia: {\n    bing: BingTranslateLanguages.Odia,\n  },\n  Pashto: {\n    google: GoogleTranslateLanguages.Pashto,\n    google2: GoogleTranslate2Languages.Pashto,\n    bing: BingTranslateLanguages.Pashto,\n  },\n  Persian: {\n    google: GoogleTranslateLanguages.Persian,\n    google2: GoogleTranslate2Languages.Persian,\n    bing: BingTranslateLanguages.Persian,\n    libre: LibreTranslateLanguages.Persian,\n  },\n  Polish: {\n    google: GoogleTranslateLanguages.Polish,\n    google2: GoogleTranslate2Languages.Polish,\n    bing: BingTranslateLanguages.Polish,\n    libre: LibreTranslateLanguages.Polish,\n    argos: ArgosTranslateLanguages.Polish,\n    deepl: DeepLTranslateLanguages.Polish,\n  },\n  Portuguese: {\n    google: GoogleTranslateLanguages.Portuguese,\n    google2: GoogleTranslate2Languages.Portuguese,\n    bing: BingTranslateLanguages.Portuguese_Portugal,\n    libre: LibreTranslateLanguages.Portuguese,\n    argos: ArgosTranslateLanguages.Portuguese,\n    deepl: DeepLTranslateLanguages.Portuguese,\n  },\n  Portuguese_Brazil: {\n    bing: BingTranslateLanguages.Portuguese_Brazil,\n  },\n  Punjabi: {\n    google: GoogleTranslateLanguages.Punjabi,\n    google2: GoogleTranslate2Languages.Punjabi,\n    bing: BingTranslateLanguages.Punjabi,\n  },\n  Querétaro_Otomi: {\n    bing: BingTranslateLanguages.Querétaro_Otomi,\n  },\n  Romanian: {\n    google: GoogleTranslateLanguages.Romanian,\n    google2: GoogleTranslate2Languages.Romanian,\n    bing: BingTranslateLanguages.Romanian,\n    deepl: DeepLTranslateLanguages.Romanian,\n  },\n  Russian: {\n    google: GoogleTranslateLanguages.Russian,\n    google2: GoogleTranslate2Languages.Russian,\n    bing: BingTranslateLanguages.Russian,\n    libre: LibreTranslateLanguages.Russian,\n    argos: ArgosTranslateLanguages.Russian,\n    deepl: DeepLTranslateLanguages.Russian,\n  },\n  Samoan: {\n    google: GoogleTranslateLanguages.Samoan,\n    google2: GoogleTranslate2Languages.Samoan,\n    bing: BingTranslateLanguages.Samoan,\n  },\n  Scots_Gaelic: {\n    google: GoogleTranslateLanguages.Scots_Gaelic,\n    google2: GoogleTranslate2Languages.Scots_Gaelic,\n  },\n  Serbian: {\n    google: GoogleTranslateLanguages.Serbian,\n    google2: GoogleTranslate2Languages.Serbian,\n    bing: BingTranslateLanguages.Serbian_Latin,\n  },\n  Serbian_Cyrillic: {\n    bing: BingTranslateLanguages.Serbian_Cyrillic,\n  },\n  Sesotho: {\n    google: GoogleTranslateLanguages.Sesotho,\n    google2: GoogleTranslate2Languages.Sesotho,\n  },\n  Shona: {\n    google: GoogleTranslateLanguages.Shona,\n    google2: GoogleTranslate2Languages.Shona,\n  },\n  Sindhi: {\n    google: GoogleTranslateLanguages.Sindhi,\n    google2: GoogleTranslate2Languages.Sindhi,\n  },\n  Sinhala: {\n    google: GoogleTranslateLanguages.Sinhala,\n    google2: GoogleTranslate2Languages.Sinhala,\n  },\n  Slovak: {\n    google: GoogleTranslateLanguages.Slovak,\n    google2: GoogleTranslate2Languages.Slovak,\n    bing: BingTranslateLanguages.Slovak,\n    libre: LibreTranslateLanguages.Slovak,\n    deepl: DeepLTranslateLanguages.Slovak,\n  },\n  Slovenian: {\n    google: GoogleTranslateLanguages.Slovenian,\n    google2: GoogleTranslate2Languages.Slovenian,\n    bing: BingTranslateLanguages.Slovenian,\n    deepl: DeepLTranslateLanguages.Slovenian,\n  },\n  Somali: {\n    google: GoogleTranslateLanguages.Somali,\n    google2: GoogleTranslate2Languages.Somali,\n    bing: BingTranslateLanguages.Somali,\n  },\n  Spanish: {\n    google: GoogleTranslateLanguages.Spanish,\n    google2: GoogleTranslate2Languages.Spanish,\n    bing: BingTranslateLanguages.Spanish,\n    libre: LibreTranslateLanguages.Spanish,\n    argos: ArgosTranslateLanguages.Spanish,\n    deepl: DeepLTranslateLanguages.Spanish,\n  },\n  Sundanese: {\n    google: GoogleTranslateLanguages.Sundanese,\n    google2: GoogleTranslate2Languages.Sundanese,\n  },\n  Swahili: {\n    google: GoogleTranslateLanguages.Swahili,\n    google2: GoogleTranslate2Languages.Swahili,\n    bing: BingTranslateLanguages.Swahili,\n  },\n  Swedish: {\n    google: GoogleTranslateLanguages.Swedish,\n    google2: GoogleTranslate2Languages.Swedish,\n    bing: BingTranslateLanguages.Swedish,\n    libre: LibreTranslateLanguages.Swedish,\n    deepl: DeepLTranslateLanguages.Swedish,\n  },\n  Tahitian: {\n    bing: BingTranslateLanguages.Tahitian,\n  },\n  Tajik: {\n    google: GoogleTranslateLanguages.Tajik,\n    google2: GoogleTranslate2Languages.Tajik,\n  },\n  Tamil: {\n    google: GoogleTranslateLanguages.Tamil,\n    google2: GoogleTranslate2Languages.Tamil,\n    bing: BingTranslateLanguages.Tamil,\n  },\n  Tatar: {\n    bing: BingTranslateLanguages.Tatar,\n  },\n  Telugu: {\n    google: GoogleTranslateLanguages.Telugu,\n    google2: GoogleTranslate2Languages.Telugu,\n    bing: BingTranslateLanguages.Telugu,\n  },\n  Thai: {\n    google: GoogleTranslateLanguages.Thai,\n    google2: GoogleTranslate2Languages.Thai,\n    bing: BingTranslateLanguages.Thai,\n  },\n  Tibetan: {\n    bing: BingTranslateLanguages.Tibetan,\n  },\n  Tigrinya: {\n    bing: BingTranslateLanguages.Tigrinya,\n  },\n  Tongan: {\n    bing: BingTranslateLanguages.Tongan,\n  },\n  Turkish: {\n    google: GoogleTranslateLanguages.Turkish,\n    google2: GoogleTranslate2Languages.Turkish,\n    bing: BingTranslateLanguages.Turkish,\n    libre: LibreTranslateLanguages.Turkish,\n    argos: ArgosTranslateLanguages.Turkish,\n    deepl: DeepLTranslateLanguages.Turkish,\n  },\n  Turkmen: {\n    bing: BingTranslateLanguages.Turkmen,\n  },\n  Ukrainian: {\n    google: GoogleTranslateLanguages.Ukrainian,\n    google2: GoogleTranslate2Languages.Ukrainian,\n    bing: BingTranslateLanguages.Ukrainian,\n    libre: LibreTranslateLanguages.Ukrainian,\n    deepl: DeepLTranslateLanguages.Ukrainian,\n  },\n  Upper_Sorbian: {\n    bing: BingTranslateLanguages.Upper_Sorbian,\n  },\n  Urdu: {\n    google: GoogleTranslateLanguages.Urdu,\n    google2: GoogleTranslate2Languages.Urdu,\n    bing: BingTranslateLanguages.Urdu,\n  },\n  Uyghur: {\n    bing: BingTranslateLanguages.Uyghur,\n  },\n  Uzbek: {\n    google: GoogleTranslateLanguages.Uzbek,\n    google2: GoogleTranslate2Languages.Uzbek,\n    bing: BingTranslateLanguages.Uzbek_Latin,\n  },\n  Vietnamese: {\n    google: GoogleTranslateLanguages.Vietnamese,\n    google2: GoogleTranslate2Languages.Vietnamese,\n    bing: BingTranslateLanguages.Vietnamese,\n    argos: ArgosTranslateLanguages.Vietnamese,\n  },\n  Welsh: {\n    google: GoogleTranslateLanguages.Welsh,\n    google2: GoogleTranslate2Languages.Welsh,\n    bing: BingTranslateLanguages.Welsh,\n  },\n  Xhosa: {\n    google: GoogleTranslateLanguages.Xhosa,\n    google2: GoogleTranslate2Languages.Xhosa,\n  },\n  Yiddish: {\n    google: GoogleTranslateLanguages.Yiddish,\n    google2: GoogleTranslate2Languages.Yiddish,\n  },\n  Yoruba: {\n    google: GoogleTranslateLanguages.Yoruba,\n    google2: GoogleTranslate2Languages.Yoruba,\n  },\n  Yucatec_Maya: {\n    bing: BingTranslateLanguages.Yucatec_Maya,\n  },\n  Zulu: {\n    google: GoogleTranslateLanguages.Zulu,\n    google2: GoogleTranslate2Languages.Zulu,\n    bing: BingTranslateLanguages.Zulu,\n  },\n};\n","import { translationModuleKeys } from '../modules/helpers';\nimport { current_version, fallbacks } from './micro';\nvar figlet = require('figlet');\n\nconst cli_name = 'jsontt';\n\nconst default_color = '\\x1b[0m';\nconst success_color = '\\x1b[32m';\nconst error_color = '\\x1b[31m';\nconst info_color = '\\x1b[34m';\nconst warn_color = '\\x1b[33m';\n\nexport function success(message: string) {\n  console.log(success_color, `${message}`, default_color);\n}\n\nexport function error(message: string) {\n  console.log(error_color, `${message}`, default_color);\n}\n\nexport function info(message: string) {\n  console.log(info_color, `${message}`, default_color);\n}\n\nexport function warn(message: string) {\n  console.log(warn_color, `${message}`, default_color);\n}\n\nexport const commands = {\n  help1: '--help',\n  help2: '-h',\n};\n\nexport const supportedLanguagesUrl = `\\nsupported Languages: ${info_color}https://github.com/mololab/json-translator/blob/master/docs/LANGUAGES.md${default_color}\\n`;\n\nexport const messages = {\n  cli: {\n    // cli general messages\n    welcome: `\\n${warn_color}Sponsored by Moniesto - Bridge between Traders and Investors in Crypto \\nhttps://moniesto.com  \\n\\n${default_color}Welcome to the\\n${success_color +\n      figlet.textSync(\n        'jsontt'\n      )}${default_color}\\n\\t\\t\\t\\tcli ${current_version}\\n`,\n    description:\n      'This CLI will provide you the ability to translate your JSON/YAML files or JSON objects into different languages for free.',\n    usage: `<your/path/to/file.json>`,\n    usage_with_proxy: `Usage with proxy list file (only supported for Google module): ${cli_name} <your/path/to/file.json> <your/path/to/proxy_list.txt>`,\n    usage_by_ops: `Usage with options: ${cli_name} <your/path/to/file.json> --module <TranslationModules> --from <Language> --to <Languages...>`,\n    paths:\n      'required json file path <path/file.json> or json file with proxy list txt file path <your/path/to/file.json> <your/path/to/proxy_list.txt>',\n\n    // cli usage messages\n    module: 'specify translation module | e.g., -m google',\n    from: 'from language | e.g., -f en',\n    to: 'to translates | e.g., -t ar fr zh-CN',\n    new_file_name: 'optional ↵ | output filename | e.g., -n myApp',\n    fallback:\n      'optional ↵ | fallback logic, try other translation modules on fail | yes, no | default: no | e.g., -f yes',\n    concurrency_limit:\n      'optional ↵ | set max concurrency limit (higher faster, but easy to get banned) | default: 3 | e.g., -cl 5',\n\n    // cli prompt messages\n    select_module_message: 'Select translation module:',\n    from_message: 'From which language?',\n    to_message:\n      'To which language | languages? (Can select more than one with space bar)',\n    new_file_name_message: 'optional ↵ | Output filename',\n    fallback_message:\n      'optional ↵ | fallback logic, try other translation modules when fail | yes, no | default: no',\n    concurrency_limit_message:\n      'optional ↵ | set max concurrency limit (higher faster, but easy to get banned) | default: 3',\n\n    // fail messages\n    module_not_available: `module is not available. (choices : ${translationModuleKeys})`,\n    from_not_available: `translate language from is not available\\n${supportedLanguagesUrl}`,\n    to_not_available: `languages to translate into is not available\\n${supportedLanguagesUrl}`,\n    no_selected_language:\n      'You didn`t select any language. Please try it again and select languages with the space bar.',\n    fallback_not_available: `fallback input is not available. (choices : ${Object.keys(\n      fallbacks\n    )})`,\n    proxy_file_notValid_or_not_empty_options: `\n    - Please ensure that the value for the option \"-m, --module <Translation>\" is compatible\n    - Please ensure that the value for the option \"-f, --from <Language>\" is compatible\n    - nPlease ensure that the value for the option \"-t, --to <Languages...>\" is compatible\n    - Please ensure that the value for the option \"-n, --name <string>\" is valid\n    - Please ensure that the value for the option \"-f, --fallback <string>\" is valid\n    - Please ensure that the value for the option \"-cl, --concurrencylimit <number>\" is valid\n    - Please make sure to provide a valid path for the proxy list file at \"<your/path/to/proxy_list.txt>\".\n    `,\n\n    // success messages\n    creation_done:\n      'All files are created! You can find them in the same folder as the original file.',\n  },\n  object: {},\n  file: {\n    no_path: `The path is not provided.`,\n    no_file_in_path: `Could not find the file in the path.`,\n    cannot_translate: `Could not translate the file.`,\n    cannot_save_file: `Could not save the file.`,\n  },\n};\n","import { translate } from '@vitalets/google-translate-api';\nimport * as bingTranslator from 'bing-translate-api';\nimport createHttpProxyAgent from 'http-proxy-agent';\nimport axios from 'axios';\nimport { safeValueTransition } from './helpers';\nimport { warn } from '../utils/console';\nimport translate2 from '@iamtraction/google-translate';\n\nexport async function translateWithLibre(\n  str: string,\n  from: string,\n  to: string\n): Promise<string> {\n  let body = {\n    q: safeValueTransition(str),\n    source: from,\n    target: to,\n    format: 'text',\n    api_key: '',\n    secret: 'YK4VRVW',\n  };\n\n  const { data } = await axios.post(\n    'https://libretranslate.com/translate',\n    body,\n    {\n      headers: {\n        Origin: 'https://libretranslate.com',\n      },\n    }\n  );\n\n  return data.translatedText;\n}\n\nexport async function translateWithArgos(\n  str: string,\n  from: string,\n  to: string\n): Promise<string> {\n  let body = {\n    q: safeValueTransition(str),\n    source: from,\n    target: to,\n  };\n\n  const { data } = await axios.post(\n    'https://translate.argosopentech.com/translate',\n    body,\n    {\n      headers: {\n        Origin: 'https://translate.argosopentech.com',\n        Referer: 'https://translate.argosopentech.com',\n      },\n    }\n  );\n\n  return data.translatedText;\n}\n\nexport async function translateWithBing(\n  str: string,\n  from: string,\n  to: string\n): Promise<string> {\n  const { translation } = await bingTranslator.translate(\n    safeValueTransition(str),\n    from,\n    to,\n    false\n  );\n\n  return translation;\n}\n\nexport async function translateWithGoogle(\n  str: string,\n  from: string,\n  to: string\n): Promise<string> {\n  // step: if proxy list provided\n  if (\n    global.proxyList &&\n    global.proxyList.length > 0 &&\n    global.proxyIndex !== -1\n  ) {\n    let proxy = global.proxyList[global.proxyIndex];\n\n    // step: new proxy exist\n    if (proxy) {\n      let agent = createHttpProxyAgent(`http://${proxy}`);\n\n      let translatedStr = await translateWithGoogleByProxySupport(\n        str,\n        from,\n        to,\n        {\n          agent,\n          timeout: 4000,\n        }\n      );\n\n      return translatedStr;\n    } else {\n      warn('No new proxy exists, continuing without proxy');\n      global.proxyIndex = -1;\n\n      let translatedStr = await translateWithGoogleByProxySupport(\n        str,\n        from,\n        to\n      );\n\n      return translatedStr;\n    }\n  } else {\n    // step: translate without proxy\n    let translatedStr = await translateWithGoogleByProxySupport(str, from, to);\n\n    return translatedStr;\n  }\n}\n\nasync function translateWithGoogleByProxySupport(\n  str: string,\n  from: string,\n  to: string,\n  options?: { agent: any; timeout: number }\n) {\n  const { text } = await translate(safeValueTransition(str), {\n    from: from,\n    to: to,\n    fetchOptions: { agent: options !== undefined ? options.agent : undefined },\n  });\n\n  return text;\n}\n\nexport async function translateWithDeepL(\n  str: string,\n  from: string,\n  to: string\n): Promise<string> {\n  const DEEPL_API_KEY = process.env.DEEPL_API_KEY;\n  if (!DEEPL_API_KEY)\n    throw new Error('process.env.DEEPL_API_KEY is not defined');\n  const body = {\n    text: [safeValueTransition(str)],\n    target_lang: to,\n    source_lang: from,\n  };\n\n  const { data } = await axios.post(\n    'https://api-free.deepl.com/v2/translate',\n    body,\n    {\n      headers: {\n        Authorization: `DeepL-Auth-Key ${DEEPL_API_KEY}`,\n        'Content-Type': 'application/json',\n      },\n    }\n  );\n\n  return data.translations[0].text;\n}\n\nexport async function translateWithGoogle2(\n  str: string,\n  from: string,\n  to: string\n) {\n  const response = await translate2(str, { from: from, to: to });\n\n  return response.text;\n}\n","import {\n  translateWithGoogle,\n  translateWithBing,\n  translateWithLibre,\n  translateWithArgos,\n  translateWithDeepL,\n  translateWithGoogle2,\n} from './functions';\nimport {\n  GoogleTranslateLanguages,\n  BingTranslateLanguages,\n  LibreTranslateLanguages,\n  ArgosTranslateLanguages,\n  DeepLTranslateLanguages,\n  GoogleTranslate2Languages,\n} from './languages';\n\nexport type TranslationModules = {\n  [key: string]: TranslationModule;\n};\n\nexport type TranslationConfig = {\n  moduleKey: string;\n  TranslationModule: TranslationModule;\n  concurrencyLimit: number;\n  fallback: boolean;\n};\n\nexport interface TranslationModule {\n  name: string;\n  altName: string;\n  languages: Record<string, string>;\n  requirements?: string[];\n  init?: Function;\n  translate: Function;\n  onComplete?: Function;\n}\n\nexport const TranslationModules: TranslationModules = {\n  google: {\n    name: 'Google Translate',\n    altName: `[FREE] Google Translate (104 languages)`,\n    languages: GoogleTranslateLanguages,\n    translate: translateWithGoogle,\n  },\n  google2: {\n    name: 'Google Translate 2',\n    altName: `[FREE] Google Translate 2 (104 languages)`,\n    languages: GoogleTranslate2Languages,\n    translate: translateWithGoogle2,\n  },\n  bing: {\n    name: 'Bing Translate',\n    altName: '[FREE] Bing Microsoft Translate (110 languages)',\n    languages: BingTranslateLanguages,\n    translate: translateWithBing,\n  },\n  libre: {\n    name: 'Libre Translate',\n    altName: `[FREE] Libre Translate (29 languages)`,\n    languages: LibreTranslateLanguages,\n    translate: translateWithLibre,\n  },\n  argos: {\n    name: 'Argos Translate',\n    altName: `[FREE] Argos Translate (17 languages)`,\n    languages: ArgosTranslateLanguages,\n    translate: translateWithArgos,\n  },\n  deepl: {\n    name: 'DeepL Translate',\n    altName: 'DeepL Translate (29 languages) \\x1b[33m**NEW**\\x1b[0m',\n    requirements: ['\"DEEPL_API_KEY\" as env'],\n    languages: DeepLTranslateLanguages,\n    translate: translateWithDeepL,\n  },\n};\n","import { default_value, translation_value_limit } from '../utils/micro';\nimport { LanguageMapping } from './languages';\nimport { TranslationModule, TranslationModules } from './modules';\n\nexport function safeValueTransition(value: string) {\n  const value_safety: ValueSafety = valueIsSafe(value);\n\n  if (value_safety.is_safe === true) {\n    return value;\n  }\n\n  switch (value_safety.type) {\n    case nonSafeTypes.null:\n    case nonSafeTypes.undefined:\n    case nonSafeTypes.empty:\n      value = default_value;\n      break;\n    case nonSafeTypes.long:\n      value = value.substring(0, translation_value_limit);\n      break;\n  }\n\n  return value;\n}\n\nfunction valueIsSafe(value: string): ValueSafety {\n  let result: ValueSafety = {\n    is_safe: true,\n    type: undefined,\n  };\n\n  if (value === undefined) {\n    result.is_safe = false;\n    result['type'] = nonSafeTypes.undefined;\n\n    return result;\n  }\n\n  if (value === null) {\n    result.is_safe = false;\n    result['type'] = nonSafeTypes.null;\n\n    return result;\n  }\n\n  if (value.length >= translation_value_limit) {\n    result.is_safe = false;\n    result['type'] = nonSafeTypes.long;\n\n    return result;\n  }\n\n  if (value === '') {\n    result.is_safe = false;\n    result['type'] = nonSafeTypes.empty;\n\n    return result;\n  }\n\n  return result;\n}\n\ninterface ValueSafety {\n  is_safe: boolean;\n  type: nonSafeTypes | undefined;\n}\n\nenum nonSafeTypes {\n  'long',\n  'undefined',\n  'null',\n  'empty',\n}\n\nexport function translationModuleKeys(): string[] {\n  return Object.keys(TranslationModules);\n}\n\nexport function getTranslationModuleByKey(key: string): TranslationModule {\n  return TranslationModules[key];\n}\n\nexport function getLanguageKeyFromValue(\n  value: string,\n  languages: Record<string, string>\n): string | undefined {\n  return Object.keys(languages).find(key => languages[key] === value);\n}\n\nexport function getLanguageValues(languages: Record<string, string>): string[] {\n  return Object.values(languages);\n}\n\nexport function getLanguageVariant(\n  source: string,\n  sourceValue: string,\n  destination: string\n): string | undefined {\n  let destinationValue: string | undefined = undefined;\n\n  for (let key of Object.keys(LanguageMapping)) {\n    if (\n      LanguageMapping[key][source] !== undefined &&\n      LanguageMapping[key][source] === sourceValue &&\n      LanguageMapping[key][destination] !== undefined\n    ) {\n      destinationValue = LanguageMapping[key][destination];\n      break;\n    }\n  }\n\n  return destinationValue;\n}\n","/**\n *\n * @param objectPath path to file\n * @returns File extension without leading \".\" (\"yml\" or \"yaml\")\n */\nexport const matchYamlExt = (objectPath: string) =>\n  objectPath.match(/\\.(ya?ml)$/)?.[1];\n","import * as fs from 'fs/promises';\nimport * as YAML from 'yaml';\nimport { matchYamlExt } from '../utils/yaml';\nimport { error, messages } from '../utils/console';\n\nexport async function getFile(objectPath: string) {\n  let json_file: any = undefined;\n\n  await fs\n    .readFile(objectPath, 'utf8')\n    .then(data => {\n      // This function should return a string with JSON-encoded data.\n      // To preserve the contract, YAML files should be parsed to object\n      // and then stringified to JSON string.\n      json_file = matchYamlExt(objectPath)\n        ? JSON.stringify(YAML.parse(data))\n        : data;\n    })\n    .catch(_ => {\n      json_file = undefined;\n    });\n\n  return json_file;\n}\n\nexport function getRootFolder(path: string) {\n  let arr = path.split('/');\n  arr.pop();\n\n  let root = arr.join('/');\n\n  if (root === undefined || root === '') {\n    root = './';\n  }\n\n  return root;\n}\n\nexport async function saveFilePublic(path: string, data: any) {\n  // When path extension is for YAML file, then stringify with YAML encoder.\n  // Otherwise, default JSON encoder is used.\n  var json = matchYamlExt(path) ? YAML.stringify(data) : JSON.stringify(data);\n\n  await fs\n    .writeFile(path, json, 'utf8')\n    .then(_ => {})\n    .catch(_ => {\n      error(messages.file.cannot_save_file);\n    });\n}\n","export function map(\n  str: string\n): {\n  word: string;\n  double_brackets_map: { [key: string]: string };\n  single_brackets_map: { [key: string]: string };\n} {\n  // encode urls if exists in the str\n  str = urlEncoder(str);\n\n  let {\n    map: double_brackets_map,\n    word: initial_ignored_word,\n  } = mapByDoubleBracket(str);\n  let { map: single_brackets_map, word: ignored_word } = mapBySingleBracket(\n    initial_ignored_word\n  );\n\n  return {\n    word: ignored_word,\n    double_brackets_map,\n    single_brackets_map: single_brackets_map,\n  };\n}\n\nexport function unMap(\n  str: string,\n  double_brackets_map: object,\n  single_brackets_map: object\n): string {\n  let word = unmapBySingleBracket(str, single_brackets_map);\n  word = unmapByDoubleBracket(word, double_brackets_map);\n\n  // decode urls if exists in the str\n  word = urlDecoder(word);\n\n  return word;\n}\n\nfunction mapBySingleBracket(\n  str: string\n): { word: string; map: { [key: string]: string } } {\n  return mapIgnoredValues(str, '{', '}', '{', '}');\n}\n\nfunction unmapBySingleBracket(str: string, map: object): string {\n  return unmapIgnoredValues(str, map, '{', '}', '{', '}');\n}\n\nfunction mapByDoubleBracket(\n  str: string\n): { word: string; map: { [key: string]: string } } {\n  return mapIgnoredValues(str, '{{', '}}', '{', '}');\n}\n\nfunction unmapByDoubleBracket(str: string, map: object): string {\n  return unmapIgnoredValues(str, map, '{{', '}}', '{', '}');\n}\n\nfunction mapIgnoredValues(\n  str: string,\n  start: string,\n  end: string,\n  replaced_start: string,\n  replaced_end: string\n): { word: string; map: { [key: string]: string } } {\n  let counter = 0;\n  let map: { [key: string]: string } = {};\n\n  let regex = new RegExp(`${start}(.*?)${end}`, 'g');\n\n  let new_str = str.replace(regex, function(word) {\n    word = word.substring(start.length, word.length - end.length);\n\n    // const key = \"*\".repeat(counter)\n    const key = counter;\n\n    map[`${key}`] = word;\n\n    let locked_ignored = replaced_start + key + replaced_end;\n\n    counter++;\n    return locked_ignored;\n  });\n\n  return { word: new_str, map: map };\n}\n\nfunction unmapIgnoredValues(\n  str: string,\n  map: object,\n  start: string,\n  end: string,\n  replaced_start: string,\n  replaced_end: string\n): string {\n  for (const [key, value] of Object.entries(map)) {\n    let for_replace = replaced_start + key + replaced_end;\n\n    str = str.replace(for_replace, start + value + end);\n  }\n\n  return str;\n}\n\n// URL detector & encode AND decoder\nfunction urlEncoder(text: string): string {\n  // url finder regex => url\n  const regex = /(?:(?:https?|ftp|file):\\/\\/|www\\.|ftp\\.)(?:\\([-A-Z0-9+&@#\\/%=~_|$?!;:,.]*\\)|[-A-Z0-9+&@#\\/%=~_|$?!;:,.])*(?:\\([-A-Z0-9+&@#\\/%=~_|$?!;:,.]*\\)|[A-Z0-9+&@#\\/%=~_|$])/gim;\n\n  let new_text = text.replace(regex, function(url) {\n    url = `{` + url + `}`;\n    return url;\n  });\n\n  return new_text;\n}\n\nfunction urlDecoder(text: string): string {\n  // url finder regex => {url}\n  const regex = /{(?:(?:https?|ftp|file):\\/\\/|www\\.|ftp\\.)(?:\\([-A-Z0-9+&@#\\/%=~_|$?!;:,.]*\\)|[-A-Z0-9+&@#\\/%=~_|$?!;:,.])*(?:\\([-A-Z0-9+&@#\\/%=~_|$?!;:,.]*\\)|[A-Z0-9+&@#\\/%=~_|$])}/gim;\n\n  let new_text = text.replace(regex, function(url) {\n    url = url.substring(1, url.length - 1);\n    return url;\n  });\n\n  return new_text;\n}\n","import {\n  getLanguageVariant,\n  getTranslationModuleByKey,\n  translationModuleKeys,\n} from '../modules/helpers';\nimport { TranslationConfig } from '../modules/modules';\nimport { warn } from '../utils/console';\nimport { default_value } from '../utils/micro';\nimport * as ignorer from './ignorer';\n\nexport async function plaintranslate(\n  TranslationConfig: TranslationConfig,\n  str: string,\n  from: string,\n  to: string,\n  skipModuleKeys: string[]\n): Promise<string> {\n  // step: map the subset of string need to be ignored\n  let {\n    word: ignored_str,\n    double_brackets_map,\n    single_brackets_map,\n  } = ignorer.map(str);\n\n  // step: translate in try-catch to keep continuity\n  try {\n    // step: translate with proper source\n    let translatedStr = await TranslationConfig.TranslationModule.translate(\n      ignored_str,\n      from,\n      to\n    );\n\n    // step: put ignored values back\n    translatedStr = ignorer.unMap(\n      translatedStr,\n      double_brackets_map,\n      single_brackets_map\n    );\n\n    global.totalTranslated = global.totalTranslated + 1;\n\n    return translatedStr;\n  } catch (e) {\n    // error case\n    const clonedTranslationConfig = Object.assign({}, TranslationConfig); // cloning to escape ref value\n    const clonedSkipModuleKeys = Object.assign([], skipModuleKeys); // cloning to escape ref value\n\n    clonedSkipModuleKeys.push(clonedTranslationConfig.moduleKey);\n\n    const { newModuleKey, newFrom, newTo } = newTranslationModule(\n      clonedTranslationConfig.moduleKey,\n      clonedSkipModuleKeys,\n      from,\n      to\n    );\n\n    let stop: boolean =\n      !clonedTranslationConfig.fallback || newModuleKey === undefined;\n\n    if (stop) {\n      warn(\n        `\\nerror while translating \"${str}\" using ${clonedTranslationConfig.moduleKey}. Assigned \"--\" instead of exit from cli.`\n      );\n\n      global.totalTranslated = global.totalTranslated + 1;\n\n      return default_value;\n    }\n\n    warn(\n      `\\nerror while translating \"${str}\" using ${clonedTranslationConfig.moduleKey}. Tried: ${clonedSkipModuleKeys}. Trying ${newModuleKey}.`\n    );\n\n    // update the TranslationModule for next try\n    clonedTranslationConfig.TranslationModule = getTranslationModuleByKey(\n      newModuleKey as string\n    );\n    clonedTranslationConfig.moduleKey = newModuleKey as string;\n\n    return plaintranslate(\n      clonedTranslationConfig,\n      str,\n      newFrom as string,\n      newTo as string,\n      clonedSkipModuleKeys\n    );\n  }\n}\n\nfunction newTranslationModule(\n  sourceModuleKeys: string,\n  skipModuleKeys: string[],\n  from: string,\n  to: string\n) {\n  const default_data = {\n    newModuleKey: undefined,\n    newFrom: undefined,\n    newTo: undefined,\n  };\n\n  const allModuleKeys: string[] = translationModuleKeys();\n\n  const result: string[] = allModuleKeys.filter(\n    item => !skipModuleKeys.includes(item)\n  );\n\n  let newModuleKey = result[0];\n\n  if (!newModuleKey) {\n    return default_data; // default\n  }\n\n  let newFrom = getLanguageVariant(sourceModuleKeys, from, newModuleKey);\n  let newTo = getLanguageVariant(sourceModuleKeys, to, newModuleKey);\n\n  if (!newFrom || !newTo) {\n    return default_data; // default\n  }\n\n  // has valid newModuleKey & from & to\n  return {\n    newModuleKey,\n    newFrom,\n    newTo,\n  };\n}\n","import { translatedObject } from '..';\nimport { plaintranslate } from './translator';\nimport { TaskQueue } from 'cwait';\nimport { Promise as bluebirdPromise } from 'bluebird';\nimport { TranslationConfig } from '../modules/modules';\nimport { default_concurrency_limit } from '../utils/micro';\n\nvar queue = new TaskQueue(bluebirdPromise, default_concurrency_limit);\n\nexport async function objectTranslator(\n  TranslationConfig: TranslationConfig,\n  object: translatedObject,\n  from: string,\n  to: string[]\n): Promise<translatedObject[]> {\n  queue.concurrency = TranslationConfig.concurrencyLimit;\n\n  if (object && from && to) {\n    let generalObject: translatedObject[] | null[] = [];\n\n    await Promise.all(\n      Object.keys(to).map(async function(index) {\n        const indexAsNum = Number(index);\n        const copyObject = JSON.parse(JSON.stringify(object));\n\n        generalObject[indexAsNum] = await deepDiver(\n          TranslationConfig,\n          copyObject,\n          from,\n          to[indexAsNum]\n        );\n      })\n    );\n\n    return generalObject as translatedObject[];\n  } else {\n    throw new Error(\n      `Undefined values detected. Available ones: object: ${!!object}, from: ${!!from}, to: ${!!to}`\n    );\n  }\n}\n\nexport async function deepDiver(\n  TranslationConfig: TranslationConfig,\n  object: translatedObject,\n  from: string,\n  to: string\n): Promise<translatedObject | null> {\n  var has = Object.prototype.hasOwnProperty.bind(object);\n\n  if (object === null) {\n    return null;\n  }\n\n  await Promise.all(\n    Object.keys(object).map(async function(k) {\n      if (has(k)) {\n        switch (typeof object[k]) {\n          case 'object':\n            await deepDiver(TranslationConfig, object[k], from, to);\n            break;\n          case 'string':\n            global.totalTranslation = global.totalTranslation + 1;\n\n            return queue.add(async () => {\n              return await plaintranslate(\n                TranslationConfig,\n                object[k],\n                from,\n                to,\n                []\n              )\n                .then(data => {\n                  object[k] = data;\n                })\n                .catch(err => {\n                  // TODO: return error\n                  console.log('Translation error:', err);\n                });\n            });\n        }\n      }\n    })\n  );\n\n  return object;\n}\n","import { translatedObject } from '..';\nimport { error, messages, success } from '../utils/console';\nimport { getFile, getRootFolder, saveFilePublic } from './core';\nimport { objectTranslator } from './json_object';\nimport { matchYamlExt } from '../utils/yaml';\nimport { TranslationConfig } from '../modules/modules';\nimport { getLanguageKeyFromValue } from '../modules/helpers';\n\nexport async function fileTranslator(\n  TranslationConfig: TranslationConfig,\n  tempObjectPath: string,\n  from: string,\n  to: string[],\n  newFileName: string\n) {\n  // step: get file details -> data, path\n  let { jsonObj, objectPath } = await getFileFromPath(tempObjectPath);\n  if (jsonObj === undefined) {\n    error(messages.file.no_file_in_path);\n    return;\n  }\n\n  jsonObj = { data: JSON.parse(jsonObj) };\n\n  // step: translate object\n  let newJsonObj = await objectTranslator(TranslationConfig, jsonObj, from, to);\n  if (newJsonObj === undefined) {\n    error(messages.file.cannot_translate);\n    return;\n  }\n\n  // step: save translated data\n  let latestPath = objectPath.replace(/\\\\/g, '/');\n  const fileExt = getFileExt(latestPath);\n\n  let rootFolder = getRootFolder(latestPath);\n\n  (newJsonObj as Array<translatedObject>).forEach(async (element, index) => {\n    const currentJsonObj = element.data;\n\n    let fileName = newFileName\n      ? `/${newFileName}.${to[index]}.${fileExt}`\n      : `/${to[index]}.${fileExt}`;\n\n    await saveFilePublic(rootFolder + fileName, currentJsonObj);\n\n    success(\n      `For ${getLanguageKeyFromValue(\n        to[index],\n        TranslationConfig.TranslationModule.languages\n      )} --> ${fileName} created.`\n    );\n  });\n}\n\nexport async function getFileFromPath(\n  objectPath: string\n): Promise<{ jsonObj: any; objectPath: string }> {\n  let jsonObj: any = await getFile(objectPath);\n\n  if (jsonObj === undefined) {\n    objectPath = __dirname + '\\\\' + objectPath;\n\n    jsonObj = await getFile(objectPath);\n  }\n\n  return { jsonObj, objectPath };\n}\n\nfunction getFileExt(latestPath: string): string {\n  // Check if source file has YAML extension and return the extension (\"yml\" or \"yaml\").\n  const sourceFileMatchYamlExt = matchYamlExt(latestPath);\n\n  // When source file has \"yml\" or \"yaml\" extension, use the same in output file path.\n  // Otherwise, default \"json\" extension used.\n  const fileExt = sourceFileMatchYamlExt || 'json';\n\n  return fileExt;\n}\n","import * as fs from 'fs';\nimport { error, success } from '../utils/console';\n\nexport async function readProxyFile(file_path: string) {\n  const confs = {\n    checkerRX: /^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)\\.?\\b){4}:(\\d){1,}$/,\n  };\n  const data = await fs.promises.readFile(file_path, 'utf8');\n  if (!data) {\n    error('proxy file is empty!');\n    return;\n  }\n\n  let proxyList = data.split(/\\r?\\n/);\n\n  proxyList = proxyList.filter(proxy_item => confs.checkerRX.test(proxy_item));\n\n  success(`\\n---------------- Proxy Mode ----------------\\n`);\n  global.proxyList = proxyList;\n}\n","import {\n  translationModuleKeys,\n  getTranslationModuleByKey,\n} from '../modules/helpers';\nimport { messages } from '../utils/console';\nimport { default_concurrency_limit } from '../utils/micro';\nvar inquirer = require('inquirer');\n\nexport async function promptModuleKey(): Promise<string> {\n  const module_key_choices = translationModuleKeys().map(key => {\n    return {\n      name:\n        getTranslationModuleByKey(key).altName +\n        (getTranslationModuleByKey(key).requirements\n          ? ' | requirements: ' +\n            (getTranslationModuleByKey(key).requirements as string[]).join(\n              ' | '\n            )\n          : ''),\n      value: key,\n      short: key,\n    };\n  });\n\n  let selectedModuleKey = '';\n\n  await inquirer\n    .prompt([\n      {\n        type: 'list',\n        name: 'moduleKey',\n        message: messages.cli.select_module_message,\n        pageSize: 20,\n        choices: [...module_key_choices, new inquirer.Separator()],\n      },\n    ])\n    .then((answers: any) => {\n      selectedModuleKey = answers.moduleKey;\n    });\n\n  return selectedModuleKey;\n}\n\nexport async function promptFrom(languages: Record<string, string>) {\n  const fromLanguageKeys = Object.keys(languages);\n\n  const answers = await inquirer.prompt([\n    {\n      type: 'list',\n      name: 'from',\n      message: messages.cli.from_message,\n      pageSize: 20,\n      choices: [...fromLanguageKeys, new inquirer.Separator()],\n    },\n  ]);\n\n  return answers.from;\n}\n\nexport async function promptTo(\n  languages: Record<string, string>,\n  default_languages?: string[]\n) {\n  let toLanguageKeys = Object.keys(languages);\n  toLanguageKeys = toLanguageKeys.filter(key => key !== `Automatic`);\n\n  const answers = await inquirer.prompt([\n    {\n      type: 'checkbox',\n      name: 'to',\n      pageSize: 20,\n      message: messages.cli.to_message,\n      choices: toLanguageKeys,\n      default: default_languages ? default_languages : [],\n    },\n  ]);\n\n  return answers.to;\n}\n\nexport async function promptName() {\n  const answers = await inquirer.prompt([\n    {\n      type: 'string',\n      name: 'name',\n      message: messages.cli.new_file_name_message,\n      // default: default_name ? default_name : undefined,\n    },\n  ]);\n\n  return answers.name;\n}\n\nexport async function promptFallback() {\n  const answers = await inquirer.prompt([\n    {\n      type: 'string',\n      name: 'fallback',\n      message: messages.cli.fallback_message,\n      default: '',\n    },\n  ]);\n\n  if (answers.fallback === '') {\n    return 'no';\n  }\n\n  return answers.fallback;\n}\n\nexport async function promptConcurrencyLimit() {\n  const answers = await inquirer.prompt([\n    {\n      type: 'number',\n      name: 'concurrencylimit',\n      message: messages.cli.concurrency_limit_message,\n      default: '',\n    },\n  ]);\n\n  if (answers.concurrencylimit === '') {\n    return default_concurrency_limit;\n  }\n\n  return answers.concurrencylimit;\n}\n","import {\n  translationModuleKeys,\n  getTranslationModuleByKey,\n} from '../modules/helpers';\nimport { fileTranslator, getFileFromPath } from '../core/json_file';\nimport {\n  error,\n  info,\n  messages,\n  supportedLanguagesUrl,\n  warn,\n} from '../utils/console';\nimport loading from 'loading-cli';\nimport {\n  current_version,\n  translationStatistic,\n  default_concurrency_limit,\n  default_fallback,\n  fallbacks,\n} from '../utils/micro';\nimport { readProxyFile } from '../core/proxy_file';\nimport { Command, Option, OptionValues } from 'commander';\nimport {\n  promptFrom,\n  promptName,\n  promptTo,\n  promptModuleKey,\n  promptFallback,\n  promptConcurrencyLimit,\n} from './prompt';\nimport { TranslationConfig, TranslationModule } from '../modules/modules';\n\nconst program = new Command();\n\nexport async function initializeCli() {\n  global.totalTranslation = 0;\n  global.totalTranslated = 0;\n  global.proxyIndex = 0;\n  global.proxyList = [];\n\n  program\n    .version(current_version)\n    .addHelpText('beforeAll', messages.cli.welcome)\n    .description(messages.cli.description)\n    .usage(messages.cli.usage)\n    .addOption(\n      new Option(`-m, --module <Module>`, messages.cli.module).choices(\n        translationModuleKeys()\n      )\n    )\n    .addOption(new Option(`-f, --from <Language>`, messages.cli.from))\n    .addOption(new Option(`-t, --to <Languages...>`, messages.cli.to))\n    .addOption(new Option(`-n, --name <string>`, messages.cli.new_file_name))\n    .addOption(\n      new Option(`-fb, --fallback <string>`, messages.cli.fallback).choices(\n        Object.keys(fallbacks)\n      )\n    )\n    .addOption(\n      new Option(\n        `-cl, --concurrencylimit <number>`,\n        messages.cli.concurrency_limit\n      )\n    )\n    .addHelpText(\n      'after',\n      `\\n${messages.cli.usage_with_proxy}\\n${messages.cli.usage_by_ops}`\n    )\n    .addHelpText('afterAll', supportedLanguagesUrl);\n\n  program.showSuggestionAfterError();\n  program.exitOverride();\n\n  try {\n    program.parse();\n  } catch (err) {\n    process.exit();\n  }\n\n  if (!process.argv.slice(2).length) {\n    program.outputHelp();\n    return;\n  }\n\n  /*\n    If the user adds an option without a value or forgets the value of the option, the value of the next option is applied to the proxy file path.\n    It is actually a problem in commander.js\n    I've come to this temporary solution, which is if the proxy path does not end with .txt display error 'messages.cli.proxy_File_notValid_or_not_empty_options'\n*/\n  if (program.args[1] !== undefined && !program.args[1].includes('.txt')) {\n    error(messages.cli.proxy_file_notValid_or_not_empty_options);\n    process.exit(1);\n  }\n  translate();\n}\n\nasync function translate() {\n  const commandArguments = program.args;\n  const commandOptions = program.opts();\n\n  if (commandArguments[1] && typeof commandArguments[1] === 'string') {\n    const file_path = commandArguments[1];\n    await readProxyFile(file_path);\n  }\n\n  // no path condition\n  let objectPath = commandArguments[0];\n  if (objectPath === undefined || objectPath === '') {\n    error(messages.file.no_path);\n    info(`([path] ${messages.cli.paths})`);\n    return;\n  }\n\n  // no file in the path condition\n  let { jsonObj } = await getFileFromPath(objectPath);\n  if (jsonObj === undefined) {\n    error(messages.file.no_file_in_path);\n    return;\n  }\n\n  // get Translation Module\n  const TranslationConfig = await translationConfig(commandOptions);\n\n  // get from language\n  const fromLanguageValue = await fromLanguage(\n    commandOptions,\n    TranslationConfig.TranslationModule\n  );\n\n  // get to languages\n  const toLanguageValues = await toLanguages(\n    commandOptions,\n    TranslationConfig.TranslationModule\n  );\n\n  // get filename\n  const fileNameValue = await fileName(commandOptions);\n\n  // get fallback\n  const fallbackValue = await fallback(commandOptions);\n  TranslationConfig.fallback = fallbackValue;\n\n  // get concurrency limit\n  const concurrencyLimitValue = await concurrencyLimit(commandOptions);\n  TranslationConfig.concurrencyLimit = concurrencyLimitValue;\n\n  // set loading\n  const { load, refreshInterval } = setLoading();\n\n  await fileTranslator(\n    TranslationConfig,\n    objectPath,\n    fromLanguageValue,\n    toLanguageValues,\n    fileNameValue\n  );\n\n  load.succeed(\n    `DONE! ${translationStatistic(\n      global.totalTranslation,\n      global.totalTranslation\n    )}`\n  );\n  clearInterval(refreshInterval);\n\n  info(messages.cli.creation_done);\n}\n\n// getting input from user\nasync function translationConfig(\n  commandOptions: OptionValues\n): Promise<TranslationConfig> {\n  let moduleKey = commandOptions.module ?? undefined;\n  let TranslationModule: TranslationModule;\n\n  if (moduleKey && translationModuleKeys().includes(moduleKey)) {\n    // valid module key\n    TranslationModule = getTranslationModuleByKey(moduleKey);\n  } else if (moduleKey) {\n    // invalid module key\n    error(`${messages.cli.module_not_available}`);\n    process.exit(1);\n  } else {\n    // no module key\n    moduleKey = await promptModuleKey();\n    TranslationModule = getTranslationModuleByKey(moduleKey);\n  }\n\n  let translationConfig: TranslationConfig = {\n    moduleKey,\n    TranslationModule,\n    concurrencyLimit: default_concurrency_limit,\n    fallback: default_fallback,\n  };\n\n  return translationConfig;\n}\n\nasync function fromLanguage(\n  commandOptions: OptionValues,\n  TranslationModule: TranslationModule\n): Promise<string> {\n  const fromLanguageInput: any = commandOptions.from ?? undefined;\n  let fromLanguageValue: string;\n\n  const supportedLanguageValues = Object.values(TranslationModule.languages);\n\n  if (!fromLanguageInput) {\n    const fromLanguageInput = await promptFrom(TranslationModule.languages);\n    fromLanguageValue = TranslationModule.languages[fromLanguageInput];\n  } else {\n    if (supportedLanguageValues.includes(fromLanguageInput)) {\n      fromLanguageValue = fromLanguageInput;\n    } else {\n      error(`[${fromLanguageInput}]: ${messages.cli.from_not_available}`);\n      process.exit(1);\n    }\n  }\n\n  return fromLanguageValue;\n}\n\nasync function toLanguages(\n  commandOptions: OptionValues,\n  TranslationModule: TranslationModule\n): Promise<string[]> {\n  const toLanguageInputs: any = commandOptions.to ?? undefined;\n  let toLanguageValues: string[];\n\n  const supportedLanguageValues = Object.values(TranslationModule.languages);\n\n  if (!toLanguageInputs) {\n    const toLanguageKeys = await promptTo(TranslationModule.languages);\n    toLanguageValues = toLanguageKeys.map(\n      (key: string) => TranslationModule.languages[key]\n    );\n\n    // second chance to select languages\n    if (toLanguageValues.length === 0 || toLanguageValues === undefined) {\n      warn(messages.cli.no_selected_language);\n      const toLanguageKeys = await promptTo(TranslationModule.languages);\n      toLanguageValues = toLanguageKeys.map(\n        (key: string) => TranslationModule.languages[key]\n      );\n    }\n  } else {\n    toLanguageValues = toLanguageInputs.map((lang: string) => {\n      if (supportedLanguageValues.includes(lang)) {\n        return lang;\n      } else {\n        error(`[${lang}]: ${messages.cli.to_not_available}`);\n        process.exit(1);\n      }\n    });\n  }\n\n  return toLanguageValues;\n}\n\nasync function fileName(commandOptions: OptionValues): Promise<string> {\n  let newFileName: string = commandOptions.name ?? undefined;\n\n  if (!newFileName) {\n    const name = await promptName();\n    newFileName = name;\n  }\n\n  return newFileName;\n}\n\nasync function fallback(commandOptions: OptionValues): Promise<boolean> {\n  let fallbackStr: string = commandOptions.fallback ?? undefined;\n  let fallback: boolean = false;\n\n  if (!fallbackStr) {\n    fallbackStr = await promptFallback();\n\n    if (!Object.keys(fallbacks).includes(fallbackStr)) {\n      error(`[${fallbackStr}]: ${messages.cli.fallback_not_available}`);\n      process.exit(1);\n    }\n  }\n\n  if (fallbackStr === 'yes') {\n    fallback = fallbacks.yes;\n  } else {\n    fallback = fallbacks.no;\n  }\n\n  return fallback;\n}\n\nasync function concurrencyLimit(commandOptions: OptionValues): Promise<number> {\n  let concurrencyLimitInput: number =\n    commandOptions.concurrencylimit ?? undefined;\n\n  if (!concurrencyLimitInput) {\n    concurrencyLimitInput = await promptConcurrencyLimit();\n  }\n\n  let concurrencyLimit: number = Number(concurrencyLimitInput);\n\n  return Number.isNaN(concurrencyLimit)\n    ? default_concurrency_limit\n    : Number(concurrencyLimit);\n}\n\nfunction setLoading() {\n  const load = loading({\n    text: `Translating. Please wait. ${translationStatistic(\n      global.totalTranslated,\n      global.totalTranslation\n    )}`,\n    color: 'yellow',\n    interval: 100,\n    stream: process.stdout,\n    frames: ['.', 'o', 'O', '°', 'O', 'o', '.'],\n  }).start();\n\n  const refreshInterval = setInterval(() => {\n    load.text = `Translating. Please wait. ${translationStatistic(\n      global.totalTranslated,\n      global.totalTranslation\n    )}`;\n  }, 200);\n\n  return { load, refreshInterval };\n}\n","import { initializeCli } from './cli/cli';\nimport { plaintranslate } from './core/translator';\nimport { fileTranslator } from './core/json_file';\nimport { objectTranslator } from './core/json_object';\nimport { TranslationConfig, TranslationModules } from './modules/modules';\nimport { default_concurrency_limit, default_fallback } from './utils/micro';\n\n// TODO: fix to get from user\nexport async function translateWord(word: string, from: string, to: string) {\n  let config: TranslationConfig = {\n    moduleKey: 'google',\n    TranslationModule: TranslationModules['google'],\n    concurrencyLimit: default_concurrency_limit,\n    fallback: default_fallback,\n  };\n\n  return await plaintranslate(config, word, from, to, []);\n}\n// TODO: fix to get from user\nexport async function translateObject(\n  object: translatedObject,\n  from: string,\n  to: string[]\n): Promise<translatedObject | translatedObject[]> {\n  let hard_copy = JSON.parse(JSON.stringify(object));\n\n  let config: TranslationConfig = {\n    moduleKey: 'google',\n    TranslationModule: TranslationModules['google'],\n    concurrencyLimit: default_concurrency_limit,\n    fallback: default_fallback,\n  };\n\n  return objectTranslator(config, hard_copy, from, to);\n}\n\nexport async function translateFile(\n  objectPath: string,\n  from: string,\n  to: string[],\n  newFileName: string\n) {\n  let config: TranslationConfig = {\n    moduleKey: 'google',\n    TranslationModule: TranslationModules['google'],\n    concurrencyLimit: default_concurrency_limit,\n    fallback: default_fallback,\n  };\n\n  return fileTranslator(config, objectPath, from, to, newFileName);\n}\n\nexport async function runCli() {\n  initializeCli();\n}\n\n// TYPES\nexport interface translatedObject {\n  [key: string]: any;\n}\n"],"names":["translationStatistic","totalTranslated","totalTranslation","current_version","packageJSON","default_value","translation_value_limit","default_concurrency_limit","fallbacks","yes","no","default_fallback","GoogleTranslateLanguages","Automatic","Afrikaans","Albanian","Amharic","Arabic","Armenian","Azerbaijani","Basque","Belarusian","Bengali","Bosnian","Bulgarian","Catalan","Cebuano","Chichewa","Chinese_Simplified","Chinese_Traditional","Corsican","Croatian","Czech","Danish","Dutch","English","Esperanto","Estonian","Filipino","Finnish","French","Frisian","Galician","Georgian","German","Greek","Gujarati","Haitian_Creole","Hausa","Hawaiian","Hebrew","Hindi","Hmong","Hungarian","Icelandic","Igbo","Indonesian","Irish","Italian","Japanese","Javanese","Kannada","Kazakh","Khmer","Korean","Kurdish_Kurmanji","Kyrgyz","Lao","Latin","Latvian","Lithuanian","Luxembourgish","Macedonian","Malagasy","Malay","Malayalam","Maltese","Maori","Marathi","Mongolian","Myanmar_Burmese","Nepali","Norwegian","Pashto","Persian","Polish","Portuguese","Punjabi","Romanian","Russian","Samoan","Scots_Gaelic","Serbian","Sesotho","Shona","Sindhi","Sinhala","Slovak","Slovenian","Somali","Spanish","Sundanese","Swahili","Swedish","Tajik","Tamil","Telugu","Thai","Turkish","Ukrainian","Urdu","Uzbek","Vietnamese","Welsh","Xhosa","Yiddish","Yoruba","Zulu","GoogleTranslate2Languages","LibreTranslateLanguages","Chinese","ArgosTranslateLanguages","BingTranslateLanguages","Assamese","Bangla","Bashkir","Cantonese_Traditional","Chinese_Literary","Dari","Divehi","Faroese","Fijian","French_Canada","Hmong_Daw","Inuinnaqtun","Inuktitut","Inuktitut_Latin","Klingon_Latin","Kurdish_Central","Kurdish_Northern","Mongolian_Cyrillic","Mongolian_Traditional","Māori","Odia","Portuguese_Brazil","Portuguese_Portugal","Querétaro_Otomi","Serbian_Cyrillic","Serbian_Latin","Tahitian","Tatar","Tibetan","Tigrinya","Tongan","Turkmen","Upper_Sorbian","Uyghur","Uzbek_Latin","Yucatec_Maya","DeepLTranslateLanguages","LanguageMapping","google","google2","libre","argos","bing","deepl","figlet","require","cli_name","default_color","success_color","error_color","info_color","warn_color","success","message","console","log","error","info","warn","supportedLanguagesUrl","messages","cli","welcome","textSync","description","usage","usage_with_proxy","usage_by_ops","paths","module","from","to","new_file_name","fallback","concurrency_limit","select_module_message","from_message","to_message","new_file_name_message","fallback_message","concurrency_limit_message","module_not_available","translationModuleKeys","from_not_available","to_not_available","no_selected_language","fallback_not_available","Object","keys","proxy_file_notValid_or_not_empty_options","creation_done","object","file","no_path","no_file_in_path","cannot_translate","cannot_save_file","translateWithLibre","str","body","q","safeValueTransition","source","target","format","api_key","secret","axios","post","headers","Origin","data","translatedText","translateWithArgos","Referer","translateWithBing","bingTranslator","translation","translateWithGoogle","global","proxyList","length","proxyIndex","proxy","agent","createHttpProxyAgent","translateWithGoogleByProxySupport","timeout","translatedStr","options","translate","fetchOptions","undefined","text","translateWithDeepL","DEEPL_API_KEY","process","env","Error","target_lang","source_lang","Authorization","translations","translateWithGoogle2","translate2","response","TranslationModules","name","altName","languages","requirements","value","value_safety","valueIsSafe","is_safe","type","nonSafeTypes","empty","substring","result","getTranslationModuleByKey","key","getLanguageKeyFromValue","find","getLanguageVariant","sourceValue","destination","destinationValue","matchYamlExt","objectPath","match","getFile","json_file","fs","then","JSON","stringify","YAML","_","getRootFolder","path","arr","split","pop","root","join","saveFilePublic","json","map","urlEncoder","mapByDoubleBracket","double_brackets_map","initial_ignored_word","word","mapBySingleBracket","single_brackets_map","ignored_word","unMap","unmapBySingleBracket","unmapByDoubleBracket","urlDecoder","mapIgnoredValues","unmapIgnoredValues","start","end","replaced_start","replaced_end","counter","regex","RegExp","new_str","replace","locked_ignored","entries","for_replace","new_text","url","plaintranslate","TranslationConfig","skipModuleKeys","ignorer","ignored_str","TranslationModule","clonedTranslationConfig","assign","clonedSkipModuleKeys","push","moduleKey","newTranslationModule","newModuleKey","newFrom","newTo","stop","sourceModuleKeys","default_data","allModuleKeys","filter","item","includes","queue","TaskQueue","bluebirdPromise","objectTranslator","concurrency","concurrencyLimit","generalObject","Promise","all","index","indexAsNum","Number","copyObject","parse","deepDiver","has","prototype","hasOwnProperty","bind","k","add","err","fileTranslator","tempObjectPath","newFileName","getFileFromPath","jsonObj","newJsonObj","latestPath","fileExt","getFileExt","rootFolder","forEach","element","currentJsonObj","fileName","__dirname","sourceFileMatchYamlExt","readProxyFile","file_path","confs","checkerRX","readFile","proxy_item","test","inquirer","promptModuleKey","module_key_choices","selectedModuleKey","prompt","pageSize","choices","Separator","answers","promptFrom","fromLanguageKeys","promptTo","default_languages","toLanguageKeys","promptName","promptFallback","promptConcurrencyLimit","concurrencylimit","program","Command","initializeCli","version","addHelpText","addOption","Option","showSuggestionAfterError","exitOverride","exit","argv","slice","outputHelp","args","commandArguments","commandOptions","opts","translationConfig","fromLanguage","fromLanguageValue","toLanguages","toLanguageValues","fileNameValue","fallbackValue","concurrencyLimitValue","setLoading","load","refreshInterval","succeed","clearInterval","fromLanguageInput","supportedLanguageValues","values","toLanguageInputs","lang","fallbackStr","concurrencyLimitInput","isNaN","loading","color","interval","stream","stdout","frames","setInterval","translateWord","config","translateObject","hard_copy","translateFile","runCli"],"mappings":"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"}